import{_ as s,o as a,c as n,f as e}from"./app.0f3e1d5e.js";const u=JSON.parse('{"title":"Getting started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Step. 1: Create a new project","slug":"step-1-create-a-new-project","link":"#step-1-create-a-new-project","children":[]},{"level":2,"title":"Step. 2: Installation","slug":"step-2-installation","link":"#step-2-installation","children":[]},{"level":2,"title":"Step. 3: Configuration","slug":"step-3-configuration","link":"#step-3-configuration","children":[]},{"level":2,"title":"Step. 4: Boot up","slug":"step-4-boot-up","link":"#step-4-boot-up","children":[]}],"relativePath":"guide/getting-started.md"}'),t={name:"guide/getting-started.md"},p=e(`<h1 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>This section will help to spin up the project <strong>locally</strong>.</p><h2 id="step-1-create-a-new-project" tabindex="-1">Step. 1: Create a new project <a class="header-anchor" href="#step-1-create-a-new-project" aria-hidden="true">#</a></h2><p>Create and change into a new directory.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ mkdir auth-server </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> auth-server</span></span>
<span class="line"></span></code></pre></div><p>Then, initialize with your preferred package manager.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ npm init</span></span>
<span class="line"></span></code></pre></div><h2 id="step-2-installation" tabindex="-1">Step. 2: Installation <a class="header-anchor" href="#step-2-installation" aria-hidden="true">#</a></h2><p>Add this package as dependency to the project.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ npm install authup --save</span></span>
<span class="line"></span></code></pre></div><h2 id="step-3-configuration" tabindex="-1">Step. 3: Configuration <a class="header-anchor" href="#step-3-configuration" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">Information</p><p>In general <strong>no</strong> configuration file is required at all! All options have either default values or are generated automatically \u{1F525}.</p></div><p>To overwrite the default (generated) config option values, create a <code>authup.conf</code> file in the root directory with the following content:</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ui.port=3000</span></span>
<span class="line"><span style="color:#A6ACCD;">ui.host=127.0.0.1</span></span>
<span class="line"><span style="color:#A6ACCD;">server.database.adminUsername=admin</span></span>
<span class="line"><span style="color:#A6ACCD;">server.database.adminPassword=start123</span></span>
<span class="line"><span style="color:#A6ACCD;">server.http.port=3010</span></span>
<span class="line"><span style="color:#A6ACCD;">server.http.publicUrl=http://127.0.0.1:3010/</span></span>
<span class="line"><span style="color:#A6ACCD;">server.http.authorizeRedirectUrl=http://127.0.0.1:3000/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This will set custom options for the frontend- &amp; backend-application.</p><p>Another way is e.g. to place an <code>.env</code> file in the root-directory or provide these properties by the system environment.</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">PORT=3010</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ADMIN_USERNAME=admin</span></span>
<span class="line"><span style="color:#A6ACCD;">ADMIN_PASSWORD=start123</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">PUBLIC_URL=http://127.0.0.1:3010/</span></span>
<span class="line"><span style="color:#A6ACCD;">AUTHORIZE_REDIRECT_URL=http://127.0.0.1:3000/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="step-4-boot-up" tabindex="-1">Step. 4: Boot up <a class="header-anchor" href="#step-4-boot-up" aria-hidden="true">#</a></h2><p>Add some scripts to <code>package.json</code>.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">authup start</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>The application setup will be processed on startup, if it has not already happened in a previous execution.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ npm run start</span></span>
<span class="line"></span></code></pre></div><p>The output should be similar to the following:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">i Server: Starting... </span></span>
<span class="line"><span style="color:#A6ACCD;">\u221A Server: Started</span></span>
<span class="line"><span style="color:#A6ACCD;">i UI: Starting...</span></span>
<span class="line"><span style="color:#A6ACCD;">\u221A UI: Started</span></span>
<span class="line"><span style="color:#A6ACCD;">i UI: Listening http://127.0.0.1:3000</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Environment: production</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: WritableDirectoryPath: xxx</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: URL: http://127.0.0.1:3010</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Docs-URL: http://127.0.0.1:3010/docs/</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: UI-URL: http://127.0.0.1:3000</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Generating documentation...</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Generated documentation.</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Establishing database connection...</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Established database connection.</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Starting oauth2 cleaner...</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Started oauth2 cleaner.</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Starting http server...</span></span>
<span class="line"><span style="color:#A6ACCD;">i Server: Started http server.</span></span>
<span class="line"></span></code></pre></div><p>This will lunch the following application with default settings:</p><ul><li>Frontend Application: <code>http://127.0.0.1:3000/</code></li><li>Backend Application: <code>http://127.0.0.1:3010/</code></li><li>Docs: <code>http://127.0.0.1:3010/docs</code></li></ul>`,26),l=[p];function o(i,c,r,d,C,h){return a(),n("div",null,l)}const y=s(t,[["render",o]]);export{u as __pageData,y as default};
