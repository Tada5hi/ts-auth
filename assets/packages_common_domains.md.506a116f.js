import{_ as e,o as i,c as o,f as r}from"./app.dbceec0b.js";const m=JSON.parse('{"title":"Domains","description":"","frontmatter":{},"headers":[],"relativePath":"packages/common/domains.md"}'),n={name:"packages/common/domains.md"},l=r('<h1 id="domains" tabindex="-1">Domains <a class="header-anchor" href="#domains" aria-hidden="true">#</a></h1><p>The following domains, provide at least a structural type and in many cases much more. If an APIClient is available for a domain, than it is named after the Type suffixed with the <code>API</code> keyword.</p><ul><li><code>OAuth2AccessToken</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2accesstoken">Reference</a></li></ul></li><li><code>OAuth2Client</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2client">Reference</a></li></ul></li><li><code>OAuth2Provider</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2provider">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>OAuth2ProviderAccount</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2provideraccount">Reference</a></li></ul></li><li><code>OAuth2ProviderRole</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2providerrole">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>OAuth2RefreshToken</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#oauth2refreshtoken">Reference</a></li></ul></li><li><code>Permission</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#permission">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>Realm</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#realm">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>Robot</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#robot">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>RobotPermission</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#robotpermission">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>RobotRole</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#robotrole">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>Role</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#role">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>RoleAttribute</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#roleattribute">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>RolePermission</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#rolepermission">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>User</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#user">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>UserAttribute</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#userattribute">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>UserPermission</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#userpermission">Reference</a></li><li><strong>APIClient</strong></li></ul></li><li><code>UserRole</code><ul><li><strong>Type</strong>: <a href="./domains-api-reference#userrole">Reference</a></li><li><strong>APIClient</strong>:</li></ul></li></ul>',3),t=[l];function s(a,c,d,f,u,g){return i(),o("div",null,t)}const h=e(n,[["render",s]]);export{m as __pageData,h as default};
