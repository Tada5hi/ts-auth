# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches:
            - '**'

env:
    PRIMARY_NODE_VERSION: 18

defaults:
    run:
        shell: bash

jobs:
    install:
        name: Checkout and Install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install
              uses: ./.github/actions/install
              with:
                  node-version: ${{ env.PRIMARY_NODE_VERSION }}

    build:
        name: Build Packages
        needs: [install]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install
              uses: ./.github/actions/install
              with:
                  node-version: ${{ env.PRIMARY_NODE_VERSION }}
            - name: Build
              uses: ./.github/actions/build

    lint:
        name: lint Packages
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.PRIMARY_NODE_VERSION }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Lint
                run: |
                    npm run lint

    tests:
        name: Test Packages
        needs: [build]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 16, 18 ]
                package: [
                    'backend/server-core',
                    'shared/common'
                ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ matrix.node-version }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Run tests
                run: |
                  npm run test:coverage --workspace=packages/${{matrix.package}} --if-present

            -   name: Store coverage for uploading
                if: env.PRIMARY_NODE_VERSION == matrix.node-version
                uses: actions/upload-artifact@v3
                with:
                    name: ${{ matrix.package }}-coverage
                    path: packages/${{ matrix.package }}/coverage/lcov.info
                    # Sadly 1 day is the minimum
                    retention-days: 1
    coverage:
        name: Upload Codecov Coverage
        needs: [ tests ]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Download coverage reports
                uses: actions/download-artifact@v3
                with:
                    path: coverage

            -   name: Publish code coverage report
                uses: codecov/codecov-action@v3
                with:
                    token: ${{ secrets.codecov }}
                    files: coverage/**/lcov.info
                    flags: unittest
                    name: codecov

    publish:
        name: Publish canary version
        needs: [lint, tests]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.PRIMARY_NODE_VERSION }}

            -   name: Build
                uses: ./.github/actions/build

            -   run: |
                    git fetch --prune --unshallow
                    - name: Publish all packages to npm
                    run: npx lerna publish --loglevel=verbose --canary --exact --force-publish --yes
                    env:
                        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
